
outfile = args[2];
infile = args[3];

word = "[a-z0-9\[\]_]+";
equals = "=";
comma = ",";
open_paren = "\(";
close_paren = "\)";
open_brace = "{";
close_brace = "}";
semicolon = ";";
backtick = "`[^`]+`";
return_word = "return";
# string = "\"[^\"]*\"";

# literals = [word, equals, comma, open_paren, close_paren, open_brace, close_brace, semicolon, backtick, return_word, string];
literals = [word, equals, comma, open_paren, close_paren, open_brace, close_brace, semicolon, backtick, return_word];

make_assembly = (infile) {
    infile_contents = read_file(infile);
    # TODO
};

write_executable = (assembly, outfile) {
    # Invoke gcc to assemble
    # `gcc -o {outfile} {assembly_file}`;
    # TODO: after stdin works, remove echo hi |
    `echo hi | gcc -x assembler -o {outfile} -`(assembly);
};

assembly = make_assembly(infile);
write_executable(assembly, outfile);
